#!/usr/bin/python
import argparse
import sys
import subprocess
import os
from ConfigParser import ConfigParser

mssql_conf_password=None
mssql_conf_username=None

def CheckCredentials():
  global mssql_conf_password
  global mssql_conf_username
  mssql_conf_password = os.getenv('MSSQL_CONF_PASSWORD')
  mssql_conf_username = os.getenv('MSSQL_CONF_USERNAME')

  if (mssql_conf_username == None or mssql_conf_password == None):
    return False
  return True

def GetCredentials():
  global mssql_conf_password
  global mssql_conf_username

  if(CheckCredentials() == False):
    mssql_conf_username = raw_input("Enter your SQL Server Username: ")
    mssql_conf_password = raw_input("Enter your SQL Server Password: ")

#command line parsing logic

parser = argparse.ArgumentParser()
parser.add_argument("-a", "--apply", help="Apply the configuration changes", action="store_true")
parser.add_argument("-i", "--init", help="Initialize the configuration tool", action="store_true")
parser.add_argument("-c", "--credentials", help="Set the Sql Server Username and password for use in this session", action="store_true")
parser.add_argument("-cp", "--changeSqlPassword", help="Change the SQL Server SA Password")
args = parser.parse_args()

defaultConfigFile="mssql.conf"
initialTempDbFileCountScript="./InitialTempDbFileCount.sh"
accept_choices = ['y', 'Y', 'yes', 'Yes']
decline_choices = ['n', 'N', 'no', 'No']

GetCredentials()

#mssql-conf -init 
if args.init:
  print("Initializing...this currently does nothing")

#mssql-conf --credentials
if args.credentials:
  print("Run 'source mssql-conf-credentials' in your shell to set the credentials, else you will be prompted for it whenever it is required")

#mssql-conf -apply

elif args.apply:
  # instantiate
  config = ConfigParser()

  # parse existing file
  config.read(defaultConfigFile)

  # read values from a section
  logdir = config.get('Database_Configuration', 'SQL_TEMPDB_LOG_DIR')
  logFileGrowth = config.getint('Database_Configuration', 'SQL_TEMPDB_LOG_FILE_GROWTH')
  ssrs = config.getboolean('Service_Configuration', 'SSRS')
  certificateFileLocation = config.get('Security_Configuration', 'SSL_CERTIFICATE_FILE_LOCATION')
  sqlTempDbAdditionalFileCount = config.getint('Database_Configuration','SQL_TEMPDB_ADDITIONAL_FILE_COUNT')

  subprocess.check_call([initialTempDbFileCountScript, '-n', str(sqlTempDbAdditionalFileCount), '-u', mssql_conf_username, '-p', mssql_conf_password])

#mssql-conf -set option

elif args.changeSqlPassword:
  password_try = 'y'
  while (password_try in accept_choices):
    password = raw_input('Please type the new database System Administrator password: ')
    re_type_password = raw_input('Confirm the database System Administrator password: ')
    
    if password == re_type_password:
      print("Applying the changes...")
      #TODO: Logic for changing sa-password
      break

    else:
      password_try = raw_input("The passwords entered do not match. Would you like to try again (y/n): ")


  