#!/usr/bin/python
import argparse
import sys
import subprocess
from ConfigParser import ConfigParser

#command line parsing logic

parser = argparse.ArgumentParser()
subparser = parser.add_subparsers()
parser.add_argument("-a", "--apply", help="Apply the configuration changes", action="store_true")
parser.add_argument("-i", "--init", help="Initialize the configuration tool", action="store_true")
set_subparser = subparser.add_parser("set")
set_subparser.add_argument("--sa_password", action="store_true", help="Set the sa-password for the sql server instance")
args = parser.parse_args()

defaultConfigFile="mssql.conf"
initialTempDbFileCountScript="./InitialTempDbFileCount.sh"
accept_choices = ['y', 'Y', 'yes', 'Yes']
decline_choices = ['n', 'N', 'no', 'No']

#mssql-conf -init 
#decide what to do here
if args.init:
  print("Initializing...this currently does nothing")


#mssql-conf -apply

elif args.apply:
  # instantiate
  config = ConfigParser()

  # parse existing file
  config.read(defaultConfigFile)

  # read values from a section
  logdir = config.get('Database_Configuration', 'SQL_TEMPDB_LOG_DIR')
  logFileGrowth = config.getint('Database_Configuration', 'SQL_TEMPDB_LOG_FILE_GROWTH')
  ssrs = config.getboolean('Service_Configuration', 'SSRS')
  certificateFileLocation = config.get('Security_Configuration', 'SSL_CERTIFICATE_FILE_LOCATION')
  sqlTempDbAdditionalFileCount = config.getint('Database_Configuration','SQL_TEMPDB_ADDITIONAL_FILE_COUNT')

  subprocess.check_call([initialTempDbFileCountScript, '-n', str(sqlTempDbAdditionalFileCount), '-u', 'SA', '-p', 'Yukon900'])

#mssql-conf -set option

elif args.sa_password:
  password_try = 'y'
  while (password_try in accept_choices):
    password = raw_input('Please type the new database System Administrator password: ')
    re_type_password = raw_input('Confirm the database System Administrator password: ')
    
    if password == re_type_password:
      print("Applying the changes...")
      #TODO: Logic for changing sa-password
      break

    else:
      password_try = raw_input("The passwords entered do not match. Would you like to try again (y/n): ")


  